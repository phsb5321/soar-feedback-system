version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    restart: always
    container_name: soar_postgres_local
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-soar_feedback}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-soar_feedback}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - soar_network

  # Application Service (for full local development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: soar_app_local
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-soar_feedback}?sslmode=disable
      - GROQ_API_KEY=${GROQ_API_KEY}
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - soar_network
    profiles:
      - full-stack

networks:
  soar_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
